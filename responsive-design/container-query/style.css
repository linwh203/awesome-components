*, *::before, *::after {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    display: grid;
    grid-template-columns: 70vw 1fr;
}

main {
    display: grid;
    padding: 10px;
    gap:1.5em;
}

.card {
    display: flex;
    /* flex-direction: column; */
    border-radius: .2rem;
}
.card-header {
    width: 200px;
    /* max-height: 300px; */
    flex:none;
}
.card-body {
    padding: 20px;
}
.card-body p {
    margin: 1rem 0;
}
.card-shadow {
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
}

.btn {
    background: lightskyblue;
    border: 1px solid lightskyblue;
    outline: none;
    padding: 1em;
    border-radius: .4em;
}
.btn-outline {
    background: #fff;
}
.btn.btn-outline:hover, .btn.btn-outline:focus {
    background: hsl(200, 50%, 90%);
}

.btn+.btn {
    margin-left: .25rem;
}

img {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

main, .sidebar {
    container-type: inline-size;
}
.sidebar {
    padding: 1rem;
    container-name: sidebar;
}
body {
    container-type: inline-size;
    container-name: body;
}
@container sidebar (width < 250px) {
    .sidebar .btn {
        display: none;
    }
}
@container body (400px < width < 768px) {
    .card {
        background: lightgreen;
    }
}
@container body (width < 600px) {
    main {
        width: 100vw;
    }
    .sidebar {
        display:none;
    }
}
@container (width < 500px) {
    .card {
        flex-direction: column;
    }
    .card-header {
        width: 100%;
    }
}
/* using the container-type, css unit can use cqw or cqh to specify the actual container sizeing  */
/* the default container is inside viewport */
/* .card {
    width: 75cqw;
} */

/* set the parent which has specify classname always be container */
/* :has(> .card) {
    container-type: inline-size;
} */
